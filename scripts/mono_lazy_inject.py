import frida
import sys
import time
import subprocess
import json


def main():
    session = frida.attach("test.exe")
    script = session.create_script("""
	function hexToBytes(hex) {
		for (var bytes = [], c = 0; c < hex.length; c += 2)
			bytes.push(parseInt(hex.substr(c, 2), 16));
		return bytes;
	}

	
    var baseAddr = Module.findBaseAddress('mono.dll');
    console.log('mono.dll baseAddr: ' + baseAddr);
	
	var  mono_domain_get_func=new NativeFunction(Module.findExportByName("mono.dll" , "mono_domain_get"),"pointer",[],"mscdecl")		
	var  mono_image_open_from_data_func=new NativeFunction(Module.findExportByName("mono.dll" , "mono_image_open_from_data"),"pointer",["pointer","int","int","pointer"],"mscdecl")
	var  mono_assembly_load_from_full_func=new NativeFunction(Module.findExportByName("mono.dll" , "mono_assembly_load_from_full"),"pointer",["int","pointer","pointer","int"],"mscdecl")
	var mono_assembly_get_image_func=new NativeFunction(Module.findExportByName("mono.dll" , "mono_assembly_get_image"),"int",["pointer"])	
	var mono_class_from_name_func=new NativeFunction(Module.findExportByName("mono.dll","mono_class_from_name"),"pointer",["int","pointer","pointer"]);	
	var mono_class_get_method_from_name_func=new NativeFunction(Module.findExportByName("mono.dll","mono_class_get_method_from_name"),"pointer",["pointer","pointer","int"]);
	var mono_runtime_invoke_func=new NativeFunction(Module.findExportByName("mono.dll","mono_runtime_invoke"),"pointer",["pointer","int","int","int"]);
	
	var injected=0;
	function injectDll(){
		console.log('trigger');
		var textDll="
		var bytes=hexToBytes(textDll)
		var mem=Memory.alloc(bytes.length)
		Memory.writeByteArray(mem, bytes)
		console.log(Memory.readByteArray(mem,128))
		
		var status=Memory.alloc(4)
		console.log("status "+status)
		var domain_result=mono_domain_get_func();

		var image_data_get_result=mono_image_open_from_data_func(mem,bytes.length,0,status);
		console.log("image_data_get_result "+image_data_get_result)
		console.log("status "+Memory.readInt(status));

		//raw_data的指针指向的值
		var address=Memory.readInt(ptr(image_data_get_result.toInt32()+8));
		console.log("raw_data address:"+address);
		//console.log("val:"+Memory.readInt(ptr(address)));
		//raw_data的偏移应该是8
		console.log(Memory.readByteArray(ptr(address),128))
		//raw_data_len的偏移为12
		console.log("raw_data_len "+Memory.readInt(ptr(image_data_get_result.toInt32()+12)))   
		
		var image=new NativePointer(image_data_get_result);
		
		var status2=Memory.alloc(4)

		var pName=Memory.allocUtf8String("ok")
		console.log("mono_assembly_load_from_full_func "+mono_assembly_load_from_full_func)
		var assembly=mono_assembly_load_from_full_func(image_data_get_result.toInt32(),pName,status2,0)
		console.log("status "+Memory.readInt(status));
		console.log("assembly "+assembly);
		
		var ret3=mono_assembly_get_image_func(assembly)
		console.log("ret3:"+ret3);
		var klass=mono_class_from_name_func(ret3,Memory.allocUtf8String(""),Memory.allocUtf8String("Injector"));
		console.log("klass:"+klass);
		var method=mono_class_get_method_from_name_func(klass,Memory.allocUtf8String("Inject"),0)
		console.log("method "+method);	
		var obj=mono_runtime_invoke_func(method,0,0,0)
		console.log("obj "+obj);	
	}
	Interceptor.attach(Module.findExportByName("mono.dll" , "mono_gc_collect"), {
        onEnter: function(args) {
			console.log('mono_gc_collect onEnter');
		},
		onLeave:function(retval){
			if(injected==0){
				injected=1;
				injectDll();
			}
		}
    });

""")

    script.on('message', on_message)
    script.load()
    fileContent=open('F:\\GitHub\\frida_learning\\scripts\\sF.dll', 'rb').read()
    byteStr=''.join('{:02x}'.format(x) for x in fileContent)
	#写dll的方法
    #textFile=open("textsF.txt","w")
    #textFile.write(byteStr)
    #textFile.close();
    time.sleep(1)
    
    script.post({"type": "post","data":byteStr})
    input('[!] Press Enter at any time to detach from instrumented program.\n\n')
    session.detach()
def on_message(message, data):
   print("recv [%s] => %s" % (message, data))
	  
if __name__ == '__main__':
    main()
